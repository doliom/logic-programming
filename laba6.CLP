(deffacts the-initial-state
(state w w w 0 b b b))

(defrule move2_1
	(state 0 ?p2 ?p3 ?p4 ?p5 ?p6 ?p7)
	(not (exists (state ?p2 0 ?p3 ?p4 ?p5 ?p6 ?p7)))
 =>
	(assert(state ?p2 0 ?p3 ?p4 ?p5 ?p6 ?p7))
	(assert (swap 0 ?p2 ?p3 ?p4 ?p5 ?p6 ?p7 to ?p2 0 ?p3 ?p4 ?p5 ?p6 ?p7)))
	
(defrule move2_2
	(state 0 ?p2 ?p3 ?p4 ?p5 ?p6 ?p7)
	(not (exists (state ?p3 ?p2 0 ?p4 ?p5 ?p6 ?p7)))
=>
	(assert(state ?p3 ?p2 0 ?p4 ?p5 ?p6 ?p7))
	(assert (swap 0 ?p2 ?p3 ?p4 ?p5 ?p6 ?p7 to ?p3 ?p2 0 ?p4 ?p5 ?p6 ?p7)))

(defrule move3_1
	(state ?p1 0 ?p3 ?p4 ?p5 ?p6 ?p7)
	(not (exists (state 0 ?p1 ?p3 ?p4 ?p5 ?p6 ?p7)))
=>
	(assert(state 0 ?p1 ?p3 ?p4 ?p5 ?p6 ?p7))
	(assert (swap ?p1 0 ?p3 ?p4 ?p5 ?p6 ?p7 to 0 ?p1 ?p3 ?p4 ?p5 ?p6 ?p7)))
	
(defrule move3_2
	(state ?p1 0 ?p3 ?p4 ?p5 ?p6 ?p7)
	(not (exists (state ?p1 ?p3 0 ?p4 ?p5 ?p6 ?p7)))
=>
	(assert(state ?p1 ?p3 0 ?p4 ?p5 ?p6 ?p7))
	(assert (swap ?p1 0 ?p3 ?p4 ?p5 ?p6 ?p7 to ?p1 ?p3 0 ?p4 ?p5 ?p6 ?p7)))
	
(defrule move3_3
	(state ?p1 0 ?p3 ?p4 ?p5 ?p6 ?p7)
	(not (exists (state ?p1 ?p4 ?p3 0 ?p5 ?p6 ?p7)))
=>
	(assert(state ?p1 ?p4 ?p3 0 ?p5 ?p6 ?p7))
	(assert (swap ?p1 0 ?p3 ?p4 ?p5 ?p6 ?p7 to ?p1 ?p4 ?p3 0 ?p5 ?p6 ?p7)))

(defrule move4_1
	(state ?p1 ?p2 0 ?p4 ?p5 ?p6 ?p7)
	(not (exists (state ?p1 0 ?p2 ?p4 ?p5 ?p6 ?p7)))
=>
	(assert(state ?p1 0 ?p2 ?p4 ?p5 ?p6 ?p7))
	(assert (swap ?p1 ?p2 0 ?p4 ?p5 ?p6 ?p7 to ?p1 0 ?p2 ?p4 ?p5 ?p6 ?p7)))

(defrule move4_2
	(state ?p1 ?p2 0 ?p4 ?p5 ?p6 ?p7)
	(not (exists (state ?p1 ?p2 ?p5 ?p4 0 ?p6 ?p7)))
=>
	(assert(state ?p1 ?p2 ?p5 ?p4 0 ?p6 ?p7))
	(assert (swap ?p1 ?p2 0 ?p4 ?p5 ?p6 ?p7 to ?p1 ?p2 ?p5 ?p4 0 ?p6 ?p7)))
	
(defrule move4_3
	(state ?p1 ?p2 0 ?p4 ?p5 ?p6 ?p7)
	(not (exists (state ?p1 ?p2 ?p4 0 ?p5 ?p6 ?p7)))
=>
	(assert(state ?p1 ?p2 ?p4 0 ?p5 ?p6 ?p7))
	(assert (swap ?p1 ?p2 0 ?p4 ?p5 ?p6 ?p7 to ?p1 ?p2 ?p4 0 ?p5 ?p6 ?p7)))
	
(defrule move4_4
	(state ?p1 ?p2 0 ?p4 ?p5 ?p6 ?p7)
	(not (exists (state 0 ?p2 ?p1 ?p4 ?p5 ?p6 ?p7)))
=>
	(assert(state 0 ?p2 ?p1 ?p4 ?p5 ?p6 ?p7))
	(assert (swap ?p1 ?p2 0 ?p4 ?p5 ?p6 ?p7 to 0 ?p2 ?p1 ?p4 ?p5 ?p6 ?p7)))

(defrule move5_1
	(state ?p1 ?p2 ?p3 0 ?p5 ?p6 ?p7)
	(not (exists (state ?p1 ?p2 ?p3 ?p5 0 ?p6 ?p7)))
=>
	(assert(state ?p1 ?p2 ?p3 ?p5 0 ?p6 ?p7))
	(assert (swap ?p1 ?p2 ?p3 0 ?p5 ?p6 ?p7 to ?p1 ?p2 ?p3 ?p5 0 ?p6 ?p7)))

(defrule move5_2
	(state ?p1 ?p2 ?p3 0 ?p5 ?p6 ?p7)
	(not (exists (state ?p1 ?p2 0 ?p3 ?p5 ?p6 ?p7)))
=>
	(assert(state ?p1 ?p2 0 ?p3 ?p5 ?p6 ?p7))
	(assert (swap ?p1 ?p2 ?p3 0 ?p5 ?p6 ?p7 to ?p1 ?p2 0 ?p3 ?p5 ?p6 ?p7)))

(defrule move5_3
	(state ?p1 ?p2 ?p3 0 ?p5 ?p6 ?p7)
	(not (exists (state ?p1 0 ?p3 ?p2 ?p5 ?p6 ?p7)))
=>
	(assert(state ?p1 0 ?p3 ?p2 ?p5 ?p6 ?p7))
	(assert (swap ?p1 ?p2 ?p3 0 ?p5 ?p6 ?p7 to ?p1 0 ?p3 ?p2 ?p5 ?p6 ?p7)))

(defrule move5_4
	(state ?p1 ?p2 ?p3 0 ?p5 ?p6 ?p7)
	(not (exists (state ?p1 ?p2 ?p3 ?p6 ?p5 0 ?p7)))
=>
	(assert(state ?p1 ?p2 ?p3 ?p6 ?p5 0 ?p7))
	(assert (swap ?p1 ?p2 ?p3 0 ?p5 ?p6 ?p7 to ?p1 ?p2 ?p3 ?p6 ?p5 0 ?p7)))

(defrule move6_1
	(state ?p1 ?p2 ?p3 ?p4 0 ?p6 ?p7)
	(not (exists (state ?p1 ?p2 ?p3 ?p4 ?p6 0 ?p7)))
=>
	(assert(state ?p1 ?p2 ?p3 ?p4 ?p6 0 ?p7))
	(assert (swap ?p1 ?p2 ?p3 ?p4 0 ?p6 ?p7 to ?p1 ?p2 ?p3 ?p4 ?p6 0 ?p7)))

(defrule move6_2
	(state ?p1 ?p2 ?p3 ?p4 0 ?p6 ?p7)
	(not (exists (state ?p1 ?p2 ?p3 0 ?p4 ?p6 ?p7)))
=>
	(assert(state ?p1 ?p2 ?p3 0 ?p4 ?p6 ?p7))
	(assert (swap ?p1 ?p2 ?p3 ?p4 0 ?p6 ?p7 to ?p1 ?p2 ?p3 0 ?p4 ?p6 ?p7)))

(defrule move6_3
	(state ?p1 ?p2 ?p3 ?p4 0 ?p6 ?p7)
	(not (exists (state ?p1 ?p2 ?p3 ?p4 ?p7 ?p6 0)))
=>
	(assert(state ?p1  ?p2 ?p3 ?p4 ?p7 ?p6 0))
	(assert (swap ?p1 ?p2 ?p3 ?p4 0 ?p6 ?p7 to ?p1 ?p2 ?p3 ?p4 ?p7 ?p6 0)))
	
(defrule move6_4
	(state ?p1 ?p2 ?p3 ?p4 0 ?p6 ?p7)
	(not (exists (state ?p1 ?p2 0 ?p4 ?p3 ?p6 ?p7)))
=>
	(assert(state ?p1 ?p2 0 ?p4 ?p3 ?p6 ?p7))
	(assert (swap ?p1 ?p2 ?p3 ?p4 0 ?p6 ?p7 to ?p1 ?p2 0 ?p4 ?p3 ?p6 ?p7)))

(defrule move7_1
	(state ?p1 ?p2 ?p3 ?p4 ?p5 0 ?p7)
	(not (exists (state ?p1 ?p2 ?p3 ?p4 ?p5 ?p7 0)))
=>
	(assert(state ?p1 ?p2 ?p3 ?p4 ?p5 ?p7 0))
	(assert (swap ?p1 ?p2 ?p3 ?p4 ?p5 0 ?p7 to ?p1 ?p2 ?p3 ?p4 ?p5 ?p7 0)))

(defrule move7_2
	(state ?p1 ?p2 ?p3 ?p4 ?p5 0 ?p7)
	(not (exists (state ?p1 ?p2 ?p3 ?p4 0 ?p5 ?p7)))
=>
	(assert(state ?p1 ?p2 ?p3 ?p4 0 ?p5 ?p7))
	(assert (swap ?p1 ?p2 ?p3 ?p4 ?p5 0 ?p7 to ?p1 ?p2 ?p3 ?p4 0 ?p5 ?p7)))

(defrule move7_3
	(state ?p1 ?p2 ?p3 ?p4 ?p5 0 ?p7)
	(not (exists (state ?p1 ?p2 ?p3 0 ?p5 ?p4 ?p7)))
=>
	(assert(state ?p1 ?p2 ?p3 0 ?p5 ?p4 ?p7))
	(assert (swap ?p1 ?p2 ?p3 ?p4 ?p5 0 ?p7 to ?p1 ?p2 ?p3 0 ?p5 ?p4 ?p7)))

(defrule move8_1
	(state ?p1 ?p2 ?p3 ?p4 ?p5 ?p6 0)
	(not (exists (state ?p1 ?p2 ?p3 ?p4 0 ?p6 ?p5)))
=>
	(assert(state ?p1 ?p2 ?p3 ?p4 0 ?p6 ?p5))
	(assert (swap ?p1 ?p2 ?p3 ?p4 ?p5 ?p6 to ?p1 ?p2 ?p3 ?p4 0 ?p6 ?p5)))

(defrule move8_2
	(state ?p1 ?p2 ?p3 ?p4 ?p5 ?p6 0)
	(not (exists (state ?p1 ?p2 ?p3 ?p4 ?p5 0 ?p6)))
=>
	(assert(state ?p1 ?p2 ?p3 ?p4 ?p5 0 ?p6))
	(assert(swap ?p1 ?p2 ?p3 ?p4 ?p5 ?p6 0 to ?p1 ?p2 ?p3 ?p4 ?p5 0 ?p6)))


(defrule reverse_path
	(swap ?p1 ?p2 ?p3 ?p4 ?p5 ?p6 ?p7 to ?p11 ?p22 ?p33 ?p44 ?p55 ?p66 ?p77)
=>
	(assert (path ?p1 ?p2 ?p3 ?p4 ?p5 ?p6 ?p7 to ?p11 ?p22 ?p33 ?p44 ?p55 ?p66 ?p77
	(str-cat "[" ?p1 ?p2 ?p3 ?p4 ?p5 ?p6 ?p7 "] -
	[" ?p11 ?p22 ?p33 ?p44 ?p55 ?p66 ?p77 "]"))))

(defrule make_path
	(path ?p1 ?p2 ?p3 ?p4 ?p5 ?p6 ?p7 to ?p11 ?p22 ?p33 ?p44 ?p55 ?p66 ?p77 ?res)
	(swap ?p11 ?p22 ?p33 ?p44 ?p55 ?p66 ?p77 to ?p111 ?p222 ?p333 ?p444 ?p555 ?p666 ?p777)
=>
	(assert (path ?p11 ?p22 ?p33 ?p44 ?p55 ?p66 ?p77 to ?p111 ?p222 ?p333 ?p444 ?p555 ?p666 ?p777
	(str-cat ?res " - [" ?p111 ?p222 ?p333 ?p444 ?p555 ?p666 ?p777 "]"))))

(defrule print_solutions
	(salience 30)
	(path w 0 b b w w b to w b b 0 w w b $?res)
=>
	(printout t $?res crlf))